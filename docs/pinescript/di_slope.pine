//@version=4
strategy("MACD DI RSI Strategy", overlay=false)

// === Parameters ===
// MACD
fast_length = input(12, "Fast Length")
slow_length = input(26, "Slow Length")
signal_length = input(9, "Signal Length")

// DI
len = input(14, "DI Length")
slope_len = input(1, "Slope Length")

// RSI
rsi_length = input(14, "RSI Length")
rsi_upper = input(65, "RSI Upper Bound")
rsi_lower = input(35, "RSI Lower Bound")

// Filters
min_slope_threshold = input(0.5, "Minimum Slope Threshold")
consecutive_signals = input(2, "Required Consecutive Signals", minval=1, maxval=5)

// Risk Management
tp_points = input(100, "Take Profit (Points)")
sl_points = input(50, "Stop Loss (Points)")

// === Calculations ===
// RSI
rsi = rsi(close, rsi_length)
is_valid_rsi_range = rsi > rsi_lower and rsi < rsi_upper

// MACD
[macd, signal, hist] = macd(close, fast_length, slow_length, signal_length)
direction = hist - hist[1]
is_macd_up = direction > 0
is_macd_down = direction < 0

// Check consecutive MACD
macd_up_count = 0
macd_down_count = 0
for i = 0 to consecutive_signals-1
    macd_up_count := macd_up_count + (nz(is_macd_up[i]) ? 1 : 0)
    macd_down_count := macd_down_count + (nz(is_macd_down[i]) ? 1 : 0)
consecutive_macd_up = macd_up_count == consecutive_signals
consecutive_macd_down = macd_down_count == consecutive_signals

// DI Calculation
TrueRange = max(max(high-low, abs(high-nz(close[1]))), abs(low-nz(close[1])))
DirectionalMovementPlus = high-nz(high[1]) > nz(low[1])-low ? max(high-nz(high[1]), 0): 0
DirectionalMovementMinus = nz(low[1])-low > high-nz(high[1]) ? max(nz(low[1])-low, 0): 0

SmoothedTrueRange = 0.0
SmoothedTrueRange := nz(SmoothedTrueRange[1]) - (nz(SmoothedTrueRange[1])/len) + TrueRange

SmoothedDirectionalMovementPlus = 0.0
SmoothedDirectionalMovementPlus := nz(SmoothedDirectionalMovementPlus[1]) - (nz(SmoothedDirectionalMovementPlus[1])/len) + DirectionalMovementPlus

SmoothedDirectionalMovementMinus = 0.0
SmoothedDirectionalMovementMinus := nz(SmoothedDirectionalMovementMinus[1]) - (nz(SmoothedDirectionalMovementMinus[1])/len) + DirectionalMovementMinus

DIPlus = SmoothedDirectionalMovementPlus / SmoothedTrueRange * 100
DIMinus = SmoothedDirectionalMovementMinus / SmoothedTrueRange * 100

// DI Slope
DIPlus_slope = DIPlus - DIPlus[slope_len]
DIMinus_slope = DIMinus - DIMinus[slope_len]
slope_diff = DIPlus_slope - DIMinus_slope

is_slope_up = slope_diff > min_slope_threshold
is_slope_down = slope_diff < -min_slope_threshold

// Check consecutive Slope
slope_up_count = 0
slope_down_count = 0
for i = 0 to consecutive_signals-1
    slope_up_count := slope_up_count + (nz(is_slope_up[i]) ? 1 : 0)
    slope_down_count := slope_down_count + (nz(is_slope_down[i]) ? 1 : 0)
consecutive_slope_up = slope_up_count == consecutive_signals
consecutive_slope_down = slope_down_count == consecutive_signals

// === Trading Signals ===
longCondition = consecutive_macd_up and consecutive_slope_up and strategy.position_size <= 0 and abs(slope_diff) > min_slope_threshold * 2 and is_valid_rsi_range
shortCondition = consecutive_macd_down and consecutive_slope_down and strategy.position_size >= 0 and abs(slope_diff) > min_slope_threshold * 2 and is_valid_rsi_range

// === Strategy Execution ===
if (longCondition)
    strategy.entry("Long", strategy.long)
    strategy.exit("Long TP/SL", "Long", limit=close + tp_points, stop=close - sl_points)

if (shortCondition)
    strategy.entry("Short", strategy.short)
    strategy.exit("Short TP/SL", "Short", limit=close - tp_points, stop=close + sl_points)

// === Plots ===
plot(macd, "MACD", color.blue)
plot(signal, "Signal", color.orange)
plot(rsi, "RSI", color.purple)
plot(hist, "Histogram", style=plot.style_histogram, color=direction > 0 ? color.green : color.red)
plot(slope_diff, "DI Slope", style=plot.style_line, color=slope_diff > 0 ? color.green : color.red, linewidth=2)

plotshape(longCondition, "Long", shape.triangleup, location.bottom, color.green, size=size.small)
plotshape(shortCondition, "Short", shape.triangledown, location.top, color.red, size=size.small)

hline(rsi_upper, "RSI Upper", color.red, linestyle=hline.style_dashed)
hline(rsi_lower, "RSI Lower", color.green, linestyle=hline.style_dashed)
hline(0, "Zero Line", color.gray, linestyle=hline.style_dotted)


'''
| 파라미터 | 값 |
|----------|-----|
| 패스트 렝스 | 12 |
| 슬로우 렝스 | 26 |
| 시그널 렝스 | 9 |
| DI 길이 | 14 |
| Slope Length | 3 |
| RSI 길이 | 14 |
| RSI Upper Bound | 65 |
| RSI Lower Bound | 35 |
| Minimum Slope Threshold | 6 |
| Required Consecutive Signals | 5 |
| Take Profit (Points) | 400 |
| Stop Loss (Points) | 400 |
'''